{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","sortBy","searchLimit","fetch","then","res","json","data","children","map","catch","err","console","log","searchForm","document","getElementById","searchInput","UIresults","timerID","addEventListener","e","preventDefault","searchQuery","value","querySelector","showMessage","showLoader","redditAPI","results","output","forEach","post","text","truncateText","selftext","image","preview","images","source","url","title","subreddit","score","innerHTML","message","className","alert","remove","clearTimeout","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","limit","shortened","indexOf","substring","spinner","src","removeLoader"],"mappings":"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","file":"Zeddit.e31bb0bc.js","sourceRoot":"..","sourcesContent":["import removeLoader from './index';\r\n\r\nexport default {\r\n    search: function(searchTerm, sortBy, searchLimit){\r\n        return fetch(`https://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`)\r\n        .then(res => {\r\n            removeLoader();\r\n            return res.json();\r\n        })\r\n        .then(data => data.data.children.map(data => data.data))\r\n        .catch(err => console.log(err))\r\n    }\r\n}","import redditAPI from './redditapi';\r\n\r\nconst searchForm = document.getElementById('search-form');\r\nconst searchInput = document.getElementById('search-input');\r\nconst UIresults = document.getElementById('results');\r\n\r\nlet timerID;\r\n\r\nsearchForm.addEventListener('submit', e => {\r\n    e.preventDefault();\r\n\r\n    // Get the search query\r\n    const searchQuery = searchInput.value;\r\n\r\n    // Get the sort type\r\n    const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n\r\n    // Get the limit\r\n    const searchLimit = document.getElementById('limit').value;\r\n\r\n    // Validate the search query\r\n    if(searchQuery === ''){\r\n        showMessage('Please enter a valid search term', 'alert-danger');\r\n    }else{\r\n        // Show Spinner\r\n        showLoader();\r\n        \r\n        // Clear the input\r\n        searchInput.value = '';\r\n    \r\n        // \r\n        redditAPI.search(searchQuery, sortBy, searchLimit)\r\n        .then(results => {\r\n            let output = '<div class=\"card-columns mt-3\">';\r\n    \r\n            // Loop through each article\r\n            results.forEach(post => {\r\n                const text = truncateText(post.selftext, 100);\r\n                const image = post.preview ? post.preview.images[0].source.url : 'image/reddit.png';\r\n    \r\n                output += `\r\n                    <div class=\"card\">\r\n                        <img class=\"card-img-top\" src=\"${image}\" alt=\"${post.title}\" />\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">${post.title}</h5>\r\n                            <p class=\"card-text\">${text}</p>\r\n                            <a href=\"${post.url}\" target=\"_blank\" class=\"btn btn-primary\">Read More</a>\r\n                            <hr />\r\n                            <span class=\"badge badge-secondary\">Subreddit: ${post.subreddit}</span>\r\n                            <span class=\"badge badge-dark\">Score: ${post.score}</span>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n            })\r\n    \r\n            output += '</div>';\r\n    \r\n            UIresults.innerHTML = output;\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n})\r\n\r\nfunction showMessage(message, className){\r\n    const alert = document.querySelector('.alert');\r\n\r\n    // Remove the previous error element if there is one\r\n    if(alert !==  null){\r\n        alert.remove();\r\n    }\r\n\r\n    // Clear the previous timeout\r\n    clearTimeout(timerID);\r\n\r\n    // Create an error element\r\n    const div = document.createElement('div');\r\n    div.className = `text-center alert ${className}`;\r\n    div.appendChild(document.createTextNode(message));\r\n\r\n    // Display the error element\r\n    const searchContainer = document.getElementById('search-container');\r\n    const search = document.getElementById('search');\r\n\r\n    // Insert the new error element\r\n    searchContainer.insertBefore(div, search);\r\n\r\n      // Remove the alert error after 3 seconds\r\n      timerID = setTimeout(() => {\r\n        document.querySelector('.alert').remove();\r\n    }, 3000);\r\n}\r\n\r\n// Truncate Text\r\nfunction truncateText(text, limit){\r\n    const shortened = text.indexOf(' ', limit);\r\n    if(shortened === -1) return text;\r\n    return text.substring(0, shortened)\r\n}\r\n\r\n// Show the loding spinner\r\nfunction showLoader(){\r\n    const spinner = document.createElement('img');\r\n    spinner.src = 'image/spinner.gif';\r\n    spinner.className = 'spinner-image';\r\n\r\n    document.getElementById('spinner').appendChild(spinner);\r\n}\r\n\r\n// Remove the loading spinner\r\nexport default function removeLoader(){\r\n    document.querySelector('.spinner-image').remove();\r\n}"]}